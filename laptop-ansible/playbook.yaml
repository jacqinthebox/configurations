# this is to install a laptop
# todo
# - az cli
# ln -s /etc/bash_completion.d/azure-cli ~/.oh-my-zsh/custom/az.zsh
# - vim
# - oh my zsh
# - autocomplete
# - kubectx
# - powerlevel10k
# vim ~/.p10k.zsh
# install zsh-completions
# git clone https://github.com/zsh-users/zsh-completions ${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions
# before source zsh:   fpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src
# - pcloud
# - obsidian
# - cherrytree
# - keybase
# https://flatpak.org/setup/Ubuntu
# https://docs.ansible.com/ansible/latest/collections/community/general/flatpak_module.html
# https://odolbeau.fr/blog/how-to-install-your-laptop-with-ansible.html
#gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-battery-timeout 60
#gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-timeout 0
#gsettings set org.gnome.settings-daemon.plugins.power idle-dim false
# vagrant and virtualbox
# vagrant plugin install winrm
# vagrant plugin install winrm-fs
# vagrant plugin install winrm-elevated
# vagrant plugin install vagrant-disksize
# touch ~/.ssh/config
# Host ssh.dev.azure.com
#    User git
#    PubkeyAcceptedAlgorithms +ssh-rsa
#    HostkeyAlgorithms +ssh-rsa
#
#

- hosts: localhost
  become: true
  gather_facts: True
  vars:
    vscode_url: https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64
    terraform_version: 1.1.8
    user_name: jacqueline
    repo_key_url: https://packages.microsoft.com/keys/microsoft.asc
    github_repo_key_url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
    nodejs_version: 16.x
    distro: jammy
    fallback_distro: impish
  tasks:
  - name: update and upgrade apt packages
    apt:
      state: present
      upgrade: yes
      update_cache: yes
      cache_valid_time: 86400
    when: ansible_os_family == 'Debian'
  - name: install misc packages
    apt:
      state: present
      pkg:
      - neofetch
      - geany
      - build-essential
      - cmake
      - vim-nox
      - python3-dev
      - mono-complete
      - linux-headers-{{ ansible_kernel }}
      - git
      - curl
      - wget
      - jq
      - xclip
      - apt-transport-https
      - zsh
      - unzip
      - htop
      - emacs
      - ripgrep
      - pandoc
      - python3-pip
      - ca-certificates
      - lsb-release
      - hugo
      - gnome-tweaks
      - tmux
      - vagrant
      - virtualbox
      - libarchive-tools
      - ruby-dev


#  - name: add GPG key for docker
#    ansible.builtin.get_url:
#      url: https://download.docker.com/linux/ubuntu/gpg
#      dest: /etc/apt/keyrings/docker.asc
#      mode: '0644'

#  - name: add docker repo to apt
#    ansible.builtin.apt_repository:
#      filename: docker.list
#      repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ distro }} stable"

  - name: install docker
    apt:
      name: "{{item}}"
      state: latest
      update_cache: yes
    loop:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin

  - name: check docker is active
    service:
      name: docker
      state: started
      enabled: yes
  - name: Ensure group "docker" exists
    ansible.builtin.group:
      name: docker
      state: present
  - name: adding "{{ user_name }}" to docker group
    user:
      name: "{{ user_name }}"
      groups: docker
      append: yes

  - name: Install docker-compose
    get_url:
      url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
      dest: /usr/local/bin/docker-compose
      mode: 'u+x,g+x'
  - name: Change file ownership, group and permissions
    ansible.builtin.file:
      path: /usr/local/bin/docker-compose
      owner: "{{ user_name }}"
      group: "{{ user_name }}"

  - name: install intellij with option --classic
    community.general.snap:
      state: absent
      name: intellij-idea-ultimate
      classic: yes

  - name: install snaps
    community.general.snap:
      name: "{{ item }}"
      state: present
      classic: yes
    loop:
      - bitwarden
      - authy
      - flameshot
      - slack

  - name: install vim pathogen
    ansible.builtin.shell:
      cmd: "mkdir -p /home/{{ user_name }}/.vim/autoload /home/{{ user_name}}/.vim/bundle && curl -LSso /home/{{ user_name }}/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim"

  - name: add vim plugins
    become_user: "{{ user_name }}"
    git:
      repo: "{{ item.repo }}"
      dest: "/home/{{ user_name }}/.vim/bundle/{{ item.dest }}"
      clone: yes
      update: yes
    loop:
      - { repo: 'https://github.com/scrooloose/nerdtree.git', dest: 'nerdtree' }
      - { repo: 'https://github.com/Valloric/MatchTagAlways.git', dest: 'MatchTagAlways' }
      - { repo: 'https://github.com/ctrlpvim/ctrlp.vim.git', dest: 'ctrlp.vim' }
      - { repo: 'https://github.com/vim-airline/vim-airline.git', dest: 'vim-airline' }
      - { repo: 'https://github.com/vim-airline/vim-airline-themes.git', dest: 'vim-airline-themes' }
      - { repo: 'https://github.com/lukaszb/vim-web-indent.git', dest: 'vim-web-indent' }
      - { repo: 'https://github.com/hashivim/vim-vagrant.git', dest: 'vim-vagrant' }
      - { repo: 'https://github.com/altercation/vim-colors-solarized.git', dest: 'vim-colors-solarized' }
      - { repo: 'https://github.com/w0rp/ale.git', dest: 'ale' }
      - { repo: 'https://github.com/Yggdroot/indentLine.git', dest: 'indentLine' }
      - { repo: 'https://github.com/ntpeters/vim-better-whitespace.git', dest: 'vim-better-whitespace' }
      - { repo: 'https://github.com/tpope/vim-surround.git', dest: 'vim-surround' }
      - { repo: 'https://github.com/mattn/emmet-vim.git', dest: 'emmet-vim' }
      - { repo: 'https://github.com/nathanaelkane/vim-indent-guides', dest: 'vim-indent-guides' }
      - { repo: 'https://github.com/pearofducks/ansible-vim', dest: 'ansible-vim' }
#      - { repo: 'https://github.com/fatih/vim-go', dest: 'vim-go' }

  - name: create vim colors dir
    file:
      path: "/home/{{ user_name }}/.vim/colors"
      state: directory

#  - name: download nord colorscheme
#    get_url:
#      url: https://raw.githubusercontent.com/arcticicestudio/nord-vim/develop/colors/nord.vim
#      dest: "/home/{{ user_name }}/.vim/colors/nord.vim"

#  - name: download vscode
#    get_url:
#      url: "{{ vscode_url }}"
#      dest: "/home/{{ user_name }}/Downloads/vscode.deb"
#  - name: install vscode
#    apt: deb="/home/{{ user_name }}/Downloads/vscode.deb"
#      state=present

#  - name: add kube apt-key
#    apt_key:
#      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
#      state: present
#  - name: add kube apt repository
#    apt_repository:
#      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
#      state: present
#      filename: 'kubernetes'
  - name: install kubectl
    apt:
      name: kubectl
      state: present
      update_cache: true

 # - name: add helm apt signing key, uses whichever key is at the URL
 #   ansible.builtin.apt_key:
 #     url: https://baltocdn.com/helm/signing.asc
 #     state: present
 # - name: add the helm source repository into sources list
 #   ansible.builtin.apt_repository:
 #     repo: deb https://baltocdn.com/helm/stable/debian/ all main
 #     state: present
 #     filename: helm-stable-debian.list
  - name: install the helm package
    apt:
      name: helm
      state: present
      update_cache: yes

  - name: download terraform archive Linux 64 bits
    get_url:
      url: https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_amd64.zip
      dest: "/home/{{ user_name }}/Downloads/terraform-{{terraform_version}}.zip"
  - name: unarchive terraform archive
    unarchive:
      src: "/home/{{ user_name }}/Downloads/terraform-{{terraform_version}}.zip"
      dest:  "/home/{{ user_name }}/Downloads"
      copy: no
  - name: adding terraform command to user path
    file:
      src: "/home/{{ user_name }}/Downloads/terraform"
      dest: /usr/local/bin/terraform
      state: link

# teams does not work yey
#  - name: download teams desktop
#    get_url:
#      url: https://go.microsoft.com/fwlink/p/?LinkID=2112886&clcid=0x409&culture=en-us&country=US
#      dest: "/home/{{ user_name }}/Downloads/teams.deb"
#  - name: install teams
#    apt: deb="/home/{{ user_name }}/Downloads/teams.deb"
#      state=present

#Azure CLI is not compatible anymore
#  - name: import the Microsoft signing key into apt
#    apt_key:
#      url: "{{ repo_key_url }}"
#      state: present
#  - name: add the Azure CLI software repository
#    apt_repository:
#      repo: "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ bionic main"
#      filename: azure-cli
#      state: present
#  - name: install Azure CLI
#    apt:
#      name: azure-cli
#      update_cache: yes

#  - name: add Nodesource apt key.
#    apt_key:
#      url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
#      id: "68576280"
#      state: present

#  - name: add NodeSource repositories for Node.js.
#    apt_repository:
#      repo: "{{ item }}"
#      state: present
#    with_items:
      #- "deb https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main"
#      - "deb https://deb.nodesource.com/node_{{ nodejs_version }} {{ fallback_distro }} main"
#      #- "deb-src https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main"
#      - "deb-src https://deb.nodesource.com/node_{{ nodejs_version }} {{ fallback_distro }} main"
#    register: node_repo

 # - name: Update apt cache if repo was added.
 #   apt: update_cache=yes
 #   when: node_repo.changed
 #   tags: ['skip_ansible_lint']

  - name: ensure Node.js and npm are installed.
    apt:
      name: "nodejs={{ nodejs_version|regex_replace('x', '') }}*"
      state: present

#  - name: add github apt-key
#    apt_key:
#      url: "{{ github_repo_key_url }}"
#      state: present
#  - name: add github apt repository
#    apt_repository:
#      repo: deb https://cli.github.com/packages stable main
#      state: present
#      filename: 'github'
#  - name: install github-cli (gh)
    apt:
      name: gh
      state: present
      update_cache: true

#  - name: cloning oh-my-zsh
##    git:
#      repo: https://github.com/robbyrussell/oh-my-zsh
#      dest: "/home/{{ user_name }}/.oh-my-zsh"
#      update: yes

#  - name: creating new ~/.zshrc
#    copy:
#      src: /home/{{ user_name }}/.oh-my-zsh/templates/zshrc.zsh-template
#      dest: /home/{{ user_name }}/.zshrc

  - name: create fonts dir
    file:
      path: "/home/{{ user_name }}/.fonts"
      state: directory

#  - name: download fonts
#    get_url:
#      url: "{{ item.font }}"
#      dest: "/home/{{ user_name }}/.fonts/{{ item.dest }}"
#    loop:
#      - { font: 'https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf', dest: 'MesloLGS%20NF%20Regular.ttf' }
#      - { font: 'https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf', dest: 'MesloLGS%20NF%20Bold.ttf' }
#      - { font: 'https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf' , dest: 'MesloLGS%20NF%20Italic.ttf' }
#      - { font: 'https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf', dest: 'MesloLGS%20NF%20Bold%20Italic.ttf' }

  - name: download keybase
    get_url:
      url: https://prerelease.keybase.io/keybase_amd64.deb
      dest: "/home/{{ user_name }}/Downloads/keybase.deb"
  - name: install keybase
    apt: deb="/home/{{ user_name }}/Downloads/keybase.deb"
      state=present

  - name: install multiple flatpak packages
    community.general.flatpak:
      name: "{{ item }}"
      state: present
    loop:
      - org.gnome.Todo
      - org.gnome.GTG
      - org.gnome.Gnote
      - org.gnome.Books
      - in.bharatkalluri.shortcircuit
      - com.giuspen.cherrytree
      - md.obsidian.Obsidian
      - org.flameshot.Flameshot
      - net.xmind.XMind8
      - com.getpostman.Postman
      - io.dbeaver.DBeaverCommunity
      - com.todoist.Todoist
      - com.github.kmwallio.thiefmd

  - name: download z.sh
    get_url:
      url: https://raw.githubusercontent.com/rupa/z/master/z.sh
      dest: "/home/{{ user_name }}/.config/z.sh"
  - name: Change file ownership, group and permissions
    ansible.builtin.file:
      path: "/home/{{ user_name }}/.config/z.sh"
      owner: "{{ user_name }}"
      group: "{{ user_name }}"
      mode: '0744'

#  - name: add syncthing apt-key
#    apt_key:
#      url: https://syncthing.net/release-key.txt
#      state: present
#  - name: add kube apt repository
#    apt_repository:
#      repo: deb https://apt.syncthing.net/ syncthing release
#      state: present
#      filename: 'syncthing.list'
#  - name: install syncthing
#    apt:
#      name: syncthing
#      state: present
#      update_cache: true

#  - name: install kubectx
#    ansible.builtin.shell:
#      cmd: git clone https://github.com/ahmetb/kubectx /opt/kubectx; ln -s /opt/kubectx/kubectx /usr/local/bin/kubectx; ln -s /opt/kubectx/kubens /usr/local/bin/kubens

#  - name: install kubectx autocomplete
#    ansible.builtin.shell:
#      cmd: "mkdir -p /home/{{ user_name }}/.oh-my-zsh/completions;chmod -R 755 /home/{{ user_name }}/.oh-my-zsh/completions;ln -s /opt/kubectx/completion/_kubectx.zsh /home/{{ user_name }}/.oh-my-zsh/completions/_kubectx.zsh;ln -s /opt/kubectx/completion/_kubens.zsh /home/{{ user_name }}/.oh-my-zsh/completions/_kubens.zsh"



