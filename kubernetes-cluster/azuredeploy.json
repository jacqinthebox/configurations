{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "masterVirtualMachineName": {
            "type": "string",
            "defaultValue": "master01"
        },
        "node01VirtualMachineName": {
            "type": "string",
            "defaultValue": "node01"
        },
        "node02VirtualMachineName": {
            "type": "string",
            "defaultValue": "node02"
        },
        "consoleVirtualMachineName": {
            "type": "string",
            "defaultValue": "console"
        },
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "diskNameSalt": {
            "type": "string"
        }
    },
    "variables": {
        "location": "west europe",
        "networkSecurityGroupName": "kube-nsg",
        "virtualNetworkName": "kube-vnet",
        "addressPrefix": "172.16.0.0/16",
        "subnetName": "nodes",
        "subnetPrefix": "172.16.10.0/24",
        "storageAccountType": "Standard_GRS",
        "storageAccountKind": "StorageV2",
        "publicIpAddressType": "Dynamic",
        "publicIpAddressSku": "Basic",
        "storageAccountName": "kubestorageforjacq",
        "virtualMachineSize": "Standard_B2s",
        "autoShutdownStatus": "enabled",
        "autoShutdownTime": "19:00",
        "autoShutdownTimeZone": "W. Europe Standard Time",
        "autoShutdownNotificationStatus": "Disabled",
        "autoShutdownNotificationLocale": "en",
        "masterNicName": "[concat(parameters('masterVirtualMachineName'),'-nic')]",
        "masterPublicIpName": "[concat(parameters('masterVirtualMachineName'),'-pip')]",
        "node01NicName": "[concat(parameters('node01VirtualMachineName'),'-nic')]",
        "node01PublicIpName": "[concat(parameters('node01VirtualMachineName'),'-pip')]",
        "node02NicName": "[concat(parameters('node02VirtualMachineName'),'-nic')]",
        "node02PublicIpName": "[concat(parameters('node02VirtualMachineName'),'-pip')]",
        "consoleNicName": "[concat(parameters('consoleVirtualMachineName'),'-nic')]",
        "consolePublicIpName": "[concat(parameters('consoleVirtualMachineName'),'-pip')]",
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
        "storageContainerUri": "[concat(concat('https://', variables('storageAccountName'), '.blob.core.windows.net/'), 'vhds/')]"
    },
    "resources": [
        {
            "name": "[variables('masterNicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-04-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('masterPublicIpName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('masterPublicIpName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            },
            "tags": {}
        },
        {
            "name": "[variables('node01NicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-04-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('node01PublicIpName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('node01PublicIpName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            },
            "tags": {}
        },
        {
            "name": "[variables('node02NicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-04-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('node02PublicIpName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('node02PublicIpName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            },
            "tags": {}
        },
        {
            "name": "[variables('consoleNicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-04-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('consolePublicIpName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('consolePublicIpName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            },
            "tags": {}
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-08-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 300,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            },
            "tags": {}
        },
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2018-08-01",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            },
            "tags": {}
        },
        {
            "name": "[variables('masterPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2018-08-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
            },
            "sku": {
                "name": "[variables('publicIpAddressSku')]"
            },
            "tags": {}
        },
        {
            "name": "[variables('node01PublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2018-08-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
            },
            "sku": {
                "name": "[variables('publicIpAddressSku')]"
            },
            "tags": {}
        },
        {
            "name": "[variables('node02PublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2018-08-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
            },
            "sku": {
                "name": "[variables('publicIpAddressSku')]"
            },
            "tags": {}
        },
        {
            "name": "[variables('consolePublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2018-08-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
            },
            "sku": {
                "name": "[variables('publicIpAddressSku')]"
            },
            "tags": {}
        },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "location": "[variables('location')]",
            "properties": {},
            "kind": "[variables('storageAccountKind')]",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "tags": {}
        },
        {
            "name": "[parameters('masterVirtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('masterNicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat(variables('storageContainerUri'), parameters('masterVirtualMachineName'), parameters('diskNameSalt'), '.vhd')]"
                        },
                        "name": "[parameters('masterVirtualMachineName')]"
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('masterNicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('masterVirtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                }
            },
            "tags": {}
        },
        {
            "name": "[parameters('node01VirtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('node01NicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat(variables('storageContainerUri'), parameters('node01VirtualMachineName'), parameters('diskNameSalt'), '.vhd')]"
                        },
                        "name": "[parameters('node01VirtualMachineName')]"
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('node01NicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('masterVirtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                }
            },
            "tags": {}
        },
        {
            "name": "[parameters('node02VirtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('node02NicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat(variables('storageContainerUri'), parameters('node02VirtualMachineName'), parameters('diskNameSalt'), '.vhd')]"
                        },
                        "name": "[parameters('node02VirtualMachineName')]"
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('node02NicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('masterVirtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                }
            },
            "tags": {}
        },
        {
            "name": "[parameters('consoleVirtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('consoleNicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat(variables('storageContainerUri'), parameters('consoleVirtualMachineName'), parameters('diskNameSalt'), '.vhd')]"
                        },
                        "name": "[parameters('consoleVirtualMachineName')]"
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('consoleNicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('consoleVirtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                }
            },
            "tags": {}
        },
        {
            "name": "[concat('shutdown-computevm-', parameters('masterVirtualMachineName'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2017-04-26-preview",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('masterVirtualMachineName'))]"
            ],
            "properties": {
                "status": "[variables('autoShutdownStatus')]",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[variables('autoShutdownTime')]"
                },
                "timeZoneId": "[variables('autoShutdownTimeZone')]",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('masterVirtualMachineName'))]",
                "notificationSettings": {
                    "status": "[variables('autoShutdownNotificationStatus')]",
                    "notificationLocale": "[variables('autoShutdownNotificationLocale')]",
                    "timeInMinutes": "30"
                }
            },
            "tags": {}
        },
        {
            "name": "[concat('shutdown-computevm-', parameters('node01VirtualMachineName'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2017-04-26-preview",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('node01VirtualMachineName'))]"
            ],
            "properties": {
                "status": "[variables('autoShutdownStatus')]",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[variables('autoShutdownTime')]"
                },
                "timeZoneId": "[variables('autoShutdownTimeZone')]",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('node01VirtualMachineName'))]",
                "notificationSettings": {
                    "status": "[variables('autoShutdownNotificationStatus')]",
                    "notificationLocale": "[variables('autoShutdownNotificationLocale')]",
                    "timeInMinutes": "30"
                }
            },
            "tags": {}
        },
        {
            "name": "[concat('shutdown-computevm-', parameters('node02VirtualMachineName'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2017-04-26-preview",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('node02VirtualMachineName'))]"
            ],
            "properties": {
                "status": "[variables('autoShutdownStatus')]",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[variables('autoShutdownTime')]"
                },
                "timeZoneId": "[variables('autoShutdownTimeZone')]",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('node02VirtualMachineName'))]",
                "notificationSettings": {
                    "status": "[variables('autoShutdownNotificationStatus')]",
                    "notificationLocale": "[variables('autoShutdownNotificationLocale')]",
                    "timeInMinutes": "30"
                }
            },
            "tags": {}
        },
        {
            "name": "[concat('shutdown-computevm-', parameters('consoleVirtualMachineName'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2017-04-26-preview",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('consoleVirtualMachineName'))]"
            ],
            "properties": {
                "status": "[variables('autoShutdownStatus')]",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[variables('autoShutdownTime')]"
                },
                "timeZoneId": "[variables('autoShutdownTimeZone')]",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('consoleVirtualMachineName'))]",
                "notificationSettings": {
                    "status": "[variables('autoShutdownNotificationStatus')]",
                    "notificationLocale": "[variables('autoShutdownNotificationLocale')]",
                    "timeInMinutes": "30"
                }
            },
            "tags": {}
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}