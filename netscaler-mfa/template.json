{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "artifactsLocationSasToken": {
            "type": "string"
        },
        "artifactsLocationStorageAccount": {
            "type": "string"
        },
        "testVar": {
            "type": "string"
        },
        "netscalerName": {
            "type": "string"
        },
        "domainName": {
            "type": "string"
        },
        "adminUserName": {
            "type": "string",
            "defaultValue": "nsroot"
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "ShouldRetrieveFromKeyVault01!"
        },
        "members": {
            "type": "int",
            "defaultValue": 2
        }
    },
    "variables": {
        "virtualNetworkName": "vnet",
        "virtualNetworkAddressRange": "10.10.0.0/16",
        "subnetName": "subnet1",
        "subnet": "10.10.1.0/24",
        "netscalerNetworkInterfaceName": "[concat(parameters('netscalerName'),'-nic')]",
        "networkSecurityGroupName": "nsg",
        "DCName": "dc01",
        "vmSize": "Standard_A2",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "imageSKU": "2016-Datacenter",
        "DcConfigurationScript": "CreateDc.ps1",
        "DcConfigurationFunction": "CreateDc",
        "dcNicIPAddress": "10.10.1.100",
        "memberIpPrefix": "10.10.1.8",
        "nestedTemplates": {
            "storageTemplateUrl": "[uri(deployment().properties.templateLink.uri, 'nestedtemplates/storage.json')]",
            "vnetTemplateUrl": "[uri(deployment().properties.templateLink.uri, 'nestedtemplates/vnet.json')]",
            "netscalerTemplateUrl": "[uri(deployment().properties.templateLink.uri, 'nestedtemplates/netscaler.json')]",
            "vnetUpdateDnsTemplateUrl": "[uri(deployment().properties.templateLink.uri, 'nestedtemplates/vnet-with-dns.json')]",
            "nicUpdateTemplateUrl": "[uri(deployment().properties.templateLink.uri, 'nestedtemplates/nic.json')]"
        }
    },
    "resources": [
        {
            "name": "storageDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('nestedTemplates').storageTemplateUrl, parameters('artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "vnetDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('nestedTemplates').vnetTemplateUrl, parameters('artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[variables('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[variables('subnetName')]"
                    },
                    "subnetRange": {
                        "value": "[variables('subnet')]"
                    }
                }
            }
        },
        {
            "name": "[concat(parameters('netscalerName'), '-vip')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-10-01",
            "dependsOn": [],
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            }
        },
        {
            "name": "[concat(parameters('netscalerName'), '-nsip')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-10-01",
            "dependsOn": [],
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-10-01",
            "dependsOn": [],
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh-rule",
                        "properties": {
                            "description": "Allow remote SSH",
                            "priority": 1000,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "Internet",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    },
                    {
                        "name": "web-rule",
                        "properties": {
                            "description": "Allow Secure WEB",
                            "priority": 1001,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "Internet",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    },
                    {
                        "name": "rdp-rule",
                        "properties": {
                            "description": "Allow rdp",
                            "priority": 1002,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "Internet",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('netscalerNetworkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('netscalerName'), '-nsip'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('netscalerName'), '-vip'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "nsip",
                        "properties": {
                            "primary": true,
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('netscalerName'), '-nsip'))]"
                            }
                        }
                    },
                    {
                        "name": "vip",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('netscalerName'), '-vip'))]"
                            }
                        }
                    },
                    {
                        "name": "snip",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "name": "netscalerVmDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('netscalerNetworkInterfaceName'))]",
                "Microsoft.Resources/deployments/storageDeployment",
                "Microsoft.Resources/deployments/vnetDeployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('nestedTemplates').netscalerTemplateUrl, parameters('artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "netscalerNetworkInterfaceName": {
                        "value": "[variables('netscalerNetworkInterfaceName')]"
                    },
                    "netscalerName": {
                        "value": "[parameters('netscalerName')]"
                    }
                }
            }
        },
        {
            "name": "[concat(variables('dcName'), '-pip')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            }
        },
        {
            "name": "[concat(variables('dcName'), '-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', concat(variables('dcName'), '-pip'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
                "Microsoft.Resources/deployments/vnetDeployment"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "dcpipconfig",
                        "properties": {
                            "primary": true,
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            },
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('dcNicIPAddress')]",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(variables('dcName'), '-pip'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "name": "[variables('DCName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "Microsoft.Resources/deployments/storageDeployment",
                "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('dcName'), '-nic'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('DCName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://', concat('disk', uniqueString(resourceGroup().id)), '.blob.core.windows.net/vhds/dcOsDisk2.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('DcName'),'-nic'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "CreateADForest",
                    "type": "extensions",
                    "apiVersion": "2017-03-30",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('DCName'))]"
                    ],
                    "location": "[resourceGroup().location]",
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.75",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "wmfVersion": "latest",
                            "configuration": {
                                "url": "[concat('https://', parameters('artifactsLocationStorageAccount'),'.blob.core.windows.net/templates/DSC/CreateDc.zip', parameters('artifactsLocationSasToken'))]",
                                "script": "[variables('DCConfigurationScript')]",
                                "function": "[variables('DCConfigurationFunction')]"
                            },
                            "configurationArguments": {
                                "DomainName": "[parameters('domainName')]"
                            }
                        },
                        "protectedSettings": {
                            "configurationArguments": {
                                "AdminCredentials": {
                                    "UserName": "[parameters('adminUserName')]",
                                    "Password": "[parameters('adminPassword')]"
                                }
                            }
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat('member0',copyIndex(1), '-pip')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "copy": {
                "name": "publicIpCopy",
                "count": "[parameters('members')]"
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('member0',copyIndex(1),'-nic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', concat('member0',copyIndex(1),'-pip'))]",
                "Microsoft.Resources/deployments/vnetDeployment"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', copyIndex(1))]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat('member0',copyIndex(1),'-pip'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            }
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicCopy",
                "count": "[parameters('members')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "copy": {
                "name": "nodeCopy",
                "count": "[parameters('members')]"
            },
            "dependsOn": [
                "Microsoft.Resources/deployments/storageDeployment",
                "[concat('Microsoft.Network/networkInterfaces/','member0',copyIndex(1),'-nic')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat('member0',copyIndex(1))]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat('member0',copyIndex(1))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://disk', uniqueString(resourceGroup().id), '.blob.core.windows.net/vhds/member0', copyIndex(1), '-OsDisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('member0',copyIndex(1),'-nic'))]"
                        }
                    ]
                }
            }
        },
        {
            "name": "UpdateVNetDNSDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('DCName'),'/extensions/CreateADForest')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat (variables('nestedTemplates').vnetUpdateDnsTemplateUrl, parameters('artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "dnsServers": {
                        "value": [
                            "[variables('DCNicIPAddress')]"
                        ]
                    },
                    "subnetName": {
                        "value": "[variables('subnetName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[variables('virtualNetworkAddressRange')]"
                    },
                    "subnetRange": {
                        "value": "[variables('subnet')]"
                    }
                }
            }
        },
        {
            "name": "[concat ('member0', copyIndex(1), 'nicupdateDeployment')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/UpdateVNetDNSDeployment"
            ],
            "copy": {
                "name": "nicUpdateCopy",
                "count": "[parameters('members')]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat (variables('nestedTemplates').nicUpdateTemplateUrl, parameters('artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nicName": {
                        "value": "[concat('member0',copyIndex(1),'-nic')]"
                    },
                    "ipConfigurations": {
                        "value": [
                            {
                                "name": "[concat('ipconfig', copyIndex(1))]",
                                "properties": {
                                    "privateIPAllocationMethod": "Static",
                                    "privateIPAddress": "[concat(variables('memberIpPrefix'),copyIndex(1))]",
                                    "subnet": {
                                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                                    }
                                }
                            }
                        ]
                    },
                    "dnsServers": {
                        "value": [
                            "[variables('DCNicIPAddress')]"
                        ]
                    }
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat('member0',copyIndex(1),'/joindomain')]",
            "dependsOn": [
                "[concat ('member0', copyIndex(1), 'nicupdateDeployment')]"
            ],
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "vmDomainJoinCopy",
                "count": "[parameters('members')]"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Name": "[parameters('domainName')]",
                    "User": "[concat(parameters('DomainName'), '\\', parameters('adminUserName'))]",
                    "Restart": "true",
                    "Options": "3"
                },
                "protectedSettings": {
                    "Password": "[parameters('adminPassword')]"
                }
            }
        }
    ],
    "outputs": {
        "testVar": {
            "type": "string",
            "value": "[parameters('testVar')]"
        }
    }
}